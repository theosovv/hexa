// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package sqlc

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type RefreshToken struct {
	ID        uuid.UUID        `json:"id"`
	UserID    uuid.UUID        `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	RevokedAt pgtype.Timestamp `json:"revoked_at"`
}

type ReverbImpulse struct {
	ID        uuid.UUID        `json:"id"`
	UserID    pgtype.UUID      `json:"user_id"`
	TrackID   pgtype.UUID      `json:"track_id"`
	Filename  string           `json:"filename"`
	FileSize  int64            `json:"file_size"`
	S3Key     string           `json:"s3_key"`
	MimeType  pgtype.Text      `json:"mime_type"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type Sample struct {
	ID        uuid.UUID        `json:"id"`
	UserID    pgtype.UUID      `json:"user_id"`
	TrackID   pgtype.UUID      `json:"track_id"`
	Filename  string           `json:"filename"`
	FileSize  int64            `json:"file_size"`
	S3Key     string           `json:"s3_key"`
	MimeType  pgtype.Text      `json:"mime_type"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type Scene struct {
	ID        uuid.UUID        `json:"id"`
	TrackID   pgtype.UUID      `json:"track_id"`
	Name      string           `json:"name"`
	StateData []byte           `json:"state_data"`
	Position  pgtype.Int4      `json:"position"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type Track struct {
	ID          uuid.UUID        `json:"id"`
	UserID      pgtype.UUID      `json:"user_id"`
	Title       string           `json:"title"`
	Description pgtype.Text      `json:"description"`
	IsPublic    pgtype.Bool      `json:"is_public"`
	Bpm         pgtype.Int4      `json:"bpm"`
	GraphData   []byte           `json:"graph_data"`
	CreatedAt   pgtype.Timestamp `json:"created_at"`
	UpdatedAt   pgtype.Timestamp `json:"updated_at"`
}

type User struct {
	ID            uuid.UUID        `json:"id"`
	Email         string           `json:"email"`
	DisplayName   pgtype.Text      `json:"display_name"`
	AvatarUrl     pgtype.Text      `json:"avatar_url"`
	OauthProvider string           `json:"oauth_provider"`
	OauthID       string           `json:"oauth_id"`
	StorageUsed   pgtype.Int8      `json:"storage_used"`
	StorageLimit  pgtype.Int8      `json:"storage_limit"`
	CreatedAt     pgtype.Timestamp `json:"created_at"`
	UpdatedAt     pgtype.Timestamp `json:"updated_at"`
}
